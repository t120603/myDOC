VSaaS Create+Bind+Pull Stream+Recorded Video Download



## << STEP 0 >>
##
## sign-in FFI00 cloud to get Grand code
##
curl --location --request POST 'https://api.ipg-services.com/api/v1/authorization/login' \
--header 'Content-Type: application/x-www-form-urlencoded' \
--data-urlencode 'account=%email address%' \
--data-urlencode 'password=%password'
##
## return (example):
    {
        "code":0,
        "message":"",
        "result":{
            "code":"NjE1MzNiMzAtNWQ3Yy00YmUwLWFkNTUtMGQyZjgzNzE4MmEx"
        }
    }

##
## << STEP 1 >>
##
## using Grand code to get access token from TUTK backend
##
curl --location --request POST 'https://idc-stg-be-docker.kalay.us:8864/accounts/vendor/token' \
--header 'Content-Type: application/x-www-form-urlencoded' \
--data-urlencode 'grant_type=authorization_code' \
--data-urlencode 'grant_code=%grand code from previous step%' \
--data-urlencode 'account_realm=BIOSLAB'
##
## return (example):
    {
        "access_token":"%assess token%",
        "expires_in":31104000,
        "refresh_token":"%refresh token%",
        "scope":"email",
        "token_type":"bearer"
    }

##
## << STEP 2>>
##
## remove device binding UID to avoid repeatedly adding device
## (note: the same unbind process when press "Delete Account" button from Settings)
## 
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'mutation{remove_device(udid:"%UID%")}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1
##
## return (example):
    {
        "data": {
            "remove_device":"Device remove success."
        }
    }
##
## << STEP 3 >>
## 
## add device (by access token & uid & identity & auth key & av token)
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'mutation {create_device(udid:"%UID%",uid:"%UID%",nickname:"%unique name", \ color_tag:"#FFFFFF",thumbnail:"a",channel:0,av:"admin",ak:"admin",pw:"admin", \ identity:"admin")}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1
##
## (note) 'nickname' can not be repeated
##
## return (example):
   ** failed to add device **
    {
        "data":{
            "create_device":"Duplicated uid, udid or nickname."
        },
        "errors":[
            {
                "message":"Duplicated uid, udid or nickname",
                "locations":[{"line":1,"column":11}],
                "path":["create_device"]
            }
        ]
    }

   ** successfully add device **
    {
        "data":{
            "create_device":"KmZVqALgRUOIHnSL-NBAM9GTB3n2mZY_JF68QRIWygHQ47xffhFeOWAUtIzhq9flKVSFveA_yI3_OnXbUd5NHGoE1bOaXOj2OpdSHikGtoE="
        }
    }

## (important) the return value is s-token which need to be passed to the device
##             in the final step
##
## << STEP 4 >>
##
## get plan list which Compal registered with TUTK
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'query {get_plan_list{pk,activate_time,vendor,state,created,updated,payment_types,name,description,price,product_type,currency,frequency,payment_frequency,event_length,max_fps,max_kbps}}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1
##
## return (example):
    {
        "data":{
            "get_plan_list":[
                {
                    "activate_time":"2019-04-18 08:26:05.999 +0000 UTC",
                    "created":"2019-04-18T08:26:05.997Z",
                    "currency":"USD",
                    "description":"Plan 04/18 USD 3",
                    "event_length":30,
                    "frequency":"Day",
                    "max_fps":100,
                    "max_kbps":100,
                    "name":"Plan 04/18 USD 3",
                    "payment_frequency":"Day",
                    "payment_types":["IDC","PAYPAL"],
                    "pk":"5cb8349da7a95b2777ac0ecf",
                    "price":"3",
                    "product_type":0,
                    "state":1,
                    "updated":"2019-04-18T08:26:05.997Z",
                    "vendor":"5cb6ddd0a7a95b0cf859816a"
                }
            ]
        }
    }

## (important) pk value is a fixed value, shoule be "5cb8349da7a95b2777ac0ecf"
##
## << STEP 5>>
##
## bind the device to the contract
##   (important parameters)
##   plan: fill in the pk value which get from previous step
##   device: fill in UID
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'mutation {create_contract(plan:"5cb8349da7a95b2777ac0ecf",payment_type:IDC,device:"%UID%"){pk}}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1
##
## return (example):
    {
        "data":{
            "create_contract":{
                "pk":"5dccf67fc525d4000126acf2"
            }
        }
    }

##
## << STEP 6 >>
##
## notify device that binding device is completed, meanwhilem pass s-token to
## device

AVAPIs.h
    int avSendJSONCrtl (int av_index, const char* json, unsigned int timeout_sec)

char json_str[] = 
    "{\"func\":\"set/vsaasInfo\",\"args\":{\"url\":\"idc-rd-vsaas.kalay.us\",\"stoken\":\"%s-token from step 3%\"}}"

##
## STEP 0-6 complete binding with VSaaS,
## then, is able to get the event list and url of recorded event video
##
##
## get event list
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'query {get_event_list (device:"%UID%",start_time:"1573488000000",end_time:"1573574399000",is_archieve:false){pk,vendor,created,updated,account,udid,thumbnail,channel,color_tag,nickname,st,uid,pw}}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1

##
## get device list
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'query {get_device_list {pk,vendor,created,updated,account,udid,thumbnail,channel,color_tag,nickname,st,uid,pw}}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1

#############################
## Recorded Video Download ##
#############################

TUTK provides two ways to retrieve recorded videos:
    Downloading (mp4)
    Streaming (m3u8)

##
## << STEP 1 >>
## get the event list
## then, use the 'start_time_ts' to query the recorded file
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'query {get_event_list (device:"%UID%",start_time:"1573488000000",end_time:"1573574399000",is_archieve:false){pk,vendor,created,updated,account,udid,thumbnail,channel,color_tag,nickname,st,uid,pw}}' \
https://idc-stg-be-docker.kalay.us:8864/api/v1

##
## return (example)
    {
        "data":{
            "get_event_list":[
            {
                "account":"5cbfd86b39df9500016352d4",
                "created":"2019-05-03T05:47:31.168Z",
                "device":"ERPA991WPTLMSNPGY1EJ",
                "event_type":0,
                "expires":"2019-05-10T05:47:25Z",
                "is_archieve":false,
                "pk":"5ccbd5f39b94a60001b9718c",
                "start_time":"2019-05-03T05:47:25Z",
                "start_time_ts":"1556862445000",
                "thumbnail":"1556862445000",
                "updated":"2019-05-03T05:47:31.168Z",
                "url":""
            },
            {
                "account":"5cbfd86b39df9500016352d4",
                "created":"2019-05-03T06:38:06.493Z",
                "device":"ERPA991WPTLMSNPGY1EJ",
                "event_type":0,
                "expires":"2019-05-10T06:38:00Z",
                "is_archieve":false,
                "pk":"5ccbe1ce9b94a60001b9719f",
                "start_time":"2019-05-03T06:38:00Z",
                "start_time_ts":"1556865480000",
                "thumbnail":"1556865480000",
                "updated":"2019-05-03T06:38:06.493Z",
                "url":""
            },
            {
                "account":"5cbfd86b39df9500016352d4",
                "created":"2019-05-03T06:39:06.696Z",
                "device":"ERPA991WPTLMSNPGY1EJ",
                "event_type":0,"
                expires":"2019-05-10T06:39:01Z",
                "is_archieve":false,
                "pk":"5ccbe20a9b94a60001b971a1",
                "start_time":"2019-05-03T06:39:01Z",
                "start_time_ts":"1556865541000",
                "thumbnail":"1556865541000",
                "updated":"2019-05-03T06:39:06.696Z",
                "url":""
            }]
        }
    }

##
## << STEP 2.1 >> get recorded vide (mp4 format)
## query mp4 link
## (important parameters)
##     endpoint: https://idc-stg-stream01.kalay.us:8080/ask
##     timestamp: %start_time_ts% which get from previous step
##     mode: ASK_DOWNLOAD
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' \
-d 'query {ask_media(device:"%UID%",timestamp:"%start_time_ts%",length:60,mode:ASK_DOWNLOAD){code,ret,url}}' \
https://idc-stg-stream01.kalay.us:8080/ask

##
## return (example)
    {
        "data":{
            "ask_media":{
                "code":0,
                "ret":"392e8aec9fff88bf235a9bafbc356bd271a70666.mp4?timestamp=1556789874341590389&ticket=d9d788286f9b440f8c1650f69bb169c0fdb14fe0",
                "url":"https://idc-stg-stream01.kalay.us:8080/media/392e8aec9fff88bf235a9bafbc356bd271a70666.mp4?timestamp=1556789874341590389&ticket=d9d788286f9b440f8c1650f69bb169c0fdb14fe0"
            }
        }
    }

## 
## download mp4 file
##
curl -H 'Authorization: Bearer %access token%' 'https://idc-stg-stream01.kalay.us:8080/media/392e8aec9fff88bf235a9bafbc356bd271a70666.mp4?timestamp=1556789874341590389&ticket=d9d788286f9b440f8c1650f69bb169c0fdb14fe0' -o event_xxx.mp4

##
## << STEP 2.2 >> get recorded vide (m3u8 format)
## query m3u8 link
## (important parameters)
##     endpoint: https://idc-stg-stream01.kalay.us:8080/ask
##     timestamp: %start_time_ts% which get from STEP 1
##     mode: ASK_EVENT
##
curl -s -L -b -X POST -H 'Authorization: Bearer %access token%' -d 'query {ask_media(device:"%UID%",timestamp:"%start_time_ts%",length:60,mode:ASK_EVENT){code,ret,url}}' \
https://idc-stg-stream01.kalay.us:8080/ask

##
## return (example)
    {
        "data":{
            "ask_media":{
                "code":0,
                "ret":"eb40b4bfda642685145ae245f7b9060306c6cf9b.m3u8",
                "url":"https://idc-stg-stream01.kalay.us:8080/media/eb40b4bfda642685145ae245f7b9060306c6cf9b.m3u8"
            }
        }
    }

## 
## download m3u8 file
##
curl -H 'Authorization: Bearer %access token' 'https://idc-stg-stream01.kalay.us:8080/media/eb40b4bfda642685145ae245f7b9060306c6cf9b.m3u8' -o xxxx.m3u8

##
## cat xxxx.m3u8
##
## (example)
    #EXTM3U
    #EXT-X-VERSION:3
    #EXT-X-TARGETDURATION:11
    #EXT-X-MEDIA-SEQUENCE:0
    #EXTINF:10.20,
1556865541000_D10197.ts?timestamp=1556878477431576331&ticket=e0f2319ea172b03194cbe57626831d0657ce9827
    #EXTINF:0.26,
1556865541000_D264.ts?timestamp=1556878477431612237&ticket=5c524881adddcd33a7d09ef064770e02646c056c
    #EXTINF:10.20,
1556865551230_D10197.ts?timestamp=1556878477431619872&ticket=85c83567c04c4b5c526bfa063da11f9d43a5a676
    #EXTINF:9.83,
1556865561460_D9834E.ts?timestamp=1556878477431626904&ticket=d9217bd7b496fc077b29db257f3cd14541d4b1fa
    #EXT-X-ENDLIST

## 
## download ts file and play
##
curl -H 'Authorization: Bearer %access token%' 'https://idc-stg-stream01.kalay.us:8080/media/1556865541000_D10197.ts?timestamp=1556878477431576331&ticket=e0f2319ea172b03194cbe57626831d0657ce9827' -o 1556865541000_D10197.ts
curl -H 'Authorization: Bearer %access token%' 'https://idc-stg-stream01.kalay.us:8080/media/1556865541000_D264.ts?timestamp=1556878477431612237&ticket=5c524881adddcd33a7d09ef064770e02646c056c' -o 1556865541000_D264.ts
curl -H 'Authorization: Bearer %access token' 'https://idc-stg-stream01.kalay.us:8080/media/1556865551230_D10197.ts?timestamp=1556878477431619872&ticket=85c83567c04c4b5c526bfa063da11f9d43a5a676' -o 1556865551230_D10197.ts
curl -H 'Authorization: Bearer %access token%' 'https://idc-stg-stream01.kalay.us:8080/media/1556865561460_D9834E.ts?timestamp=1556878477431626904&ticket=d9217bd7b496fc077b29db257f3cd14541d4b1fa' -o 1556865561460_D9834E.ts

####################
##     NOTICE     ##
####################
1) All the link will be expired 3 minutes later
2) for security consideration, mp4 file can be only downloaded once

